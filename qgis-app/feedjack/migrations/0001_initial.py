# Generated by Django 2.2 on 2020-01-15 03:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_url', models.URLField(unique=True, verbose_name='feed url')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('shortname', models.CharField(max_length=50, verbose_name='shortname')),
                ('is_active', models.BooleanField(default=True, help_text='If disabled, this feed will not be further updated.', verbose_name='is active')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='title')),
                ('tagline', models.TextField(blank=True, verbose_name='tagline')),
                ('link', models.URLField(blank=True, verbose_name='link')),
                ('etag', models.CharField(blank=True, max_length=50, verbose_name='etag')),
                ('last_modified', models.DateTimeField(blank=True, null=True, verbose_name='last modified')),
                ('last_checked', models.DateTimeField(blank=True, null=True, verbose_name='last checked')),
            ],
            options={
                'verbose_name': 'feed',
                'verbose_name_plural': 'feeds',
                'ordering': ('name', 'feed_url'),
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('link', models.URLField(verbose_name='link')),
            ],
            options={
                'verbose_name': 'link',
                'verbose_name_plural': 'links',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('url', models.CharField(help_text='Example: http://www.planetexample.com, http://www.planetexample.com:8000/foo', max_length=100, unique=True, verbose_name='url')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('welcome', models.TextField(blank=True, null=True, verbose_name='welcome')),
                ('default_site', models.BooleanField(default=False, verbose_name='default site')),
                ('posts_per_page', models.IntegerField(default=20, verbose_name='posts per page')),
                ('order_posts_by', models.IntegerField(choices=[(1, 'Date published.'), (2, 'Date the post was first obtained.')], default=1, verbose_name='order posts by')),
                ('tagcloud_levels', models.IntegerField(default=5, verbose_name='tagcloud level')),
                ('show_tagcloud', models.BooleanField(default=True, verbose_name='show tagcloud')),
                ('use_internal_cache', models.BooleanField(default=True, verbose_name='use internal cache')),
                ('cache_duration', models.IntegerField(default=86400, help_text='Duration in seconds of the cached pages and data.', verbose_name='cache duration')),
                ('template', models.CharField(blank=True, help_text='This template must be a directory in your feedjack templates directory. Leave blank to use the default template.', max_length=100, null=True, verbose_name='template')),
                ('links', models.ManyToManyField(blank=True, to='feedjack.Link', verbose_name='links')),
            ],
            options={
                'verbose_name': 'site',
                'verbose_name_plural': 'sites',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="Keep blank to use the Feed's original name.", max_length=100, null=True, verbose_name='name')),
                ('shortname', models.CharField(blank=True, help_text="Keep blank to use the Feed's original shortname.", max_length=50, null=True, verbose_name='shortname')),
                ('is_active', models.BooleanField(default=True, help_text="If disabled, this subscriber will not appear in the site or in the site's feed.", verbose_name='is active')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedjack.Feed', verbose_name='feed')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedjack.Site', verbose_name='site')),
            ],
            options={
                'verbose_name': 'subscriber',
                'verbose_name_plural': 'subscribers',
                'ordering': ('site', 'name', 'feed'),
                'unique_together': {('site', 'feed')},
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('link', models.URLField(verbose_name='link')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('date_modified', models.DateTimeField(blank=True, null=True, verbose_name='date modified')),
                ('guid', models.CharField(db_index=True, max_length=200, verbose_name='guid')),
                ('author', models.CharField(blank=True, max_length=50, verbose_name='author')),
                ('author_email', models.EmailField(blank=True, max_length=254, verbose_name='author email')),
                ('comments', models.URLField(blank=True, verbose_name='comments')),
                ('date_created', models.DateField(auto_now_add=True, verbose_name='date created')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedjack.Feed', verbose_name='feed')),
                ('tags', models.ManyToManyField(to='feedjack.Tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': ('-date_modified',),
                'unique_together': {('feed', 'guid')},
            },
        ),
    ]
