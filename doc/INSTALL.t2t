QGIS Django Project
This document describes the procedure for setting up the QGIS Django Project.
Tim Sutton 2010
%! target       : html
%! style        : style.css
%! Options      : --toc --toc-level 3 --enum-title --css-sugar --css-inside
%! preproc      : TUT_URL   https://qgis.org
%! PostProc(html): '(?i)(<pre>)' '<div class="code">\1'
%! PostProc(html): '(?i)(</pre>)' '\1</div>'
% Next line will replace tabs with 2 spaces in txt generated outputs
%! PostProc(txt): '(?i)(\t)' '  '
%! encoding: iso-8859-1
% These are comments and will not be generated in any output
% -------------------

%This document is in text2tags format. You can generate html, plain text and
%moinmoin formatted documentation by running txt2tags on this document. See the
%txt2tags home page for more details.  Please insert manual line breaks in this
%document as it makes diffing for changes much easier. To do this in vim 
%automatically, select a section then issue (gq) command. Please dont
%apply vim formatting to the whole document as it screws up some formatting
%rather apply it selectively to paragraphs where needed.

% To generate the text version of this document:
% txt2tags -t txt -o INSTALL INSTALL.t2t
% To generate the moinmoin version of this document:
% txt2tags -t moin -o INSTALL.moin INSTALL.t2t
% To generate the html version of this document:
% txt2tags -t html -o INSTALL.html INSTALL.t2t
% To generate the LaTeX version of this document:
% txt2tags -t tex -o INSTALL.tex INSTALL.t2t

% End of comments
% -------------------


= For the terminally lazy =

For a readonly checkout do:

```
sudo apt-get install libldap2-dev libsasl2-dev python-gdal
git checkout git@github.com:qgis/qgis-django.git
cd qgis-django
sudo easy_install virtualenv
virtualenv --no-site-packages python
source python/bin/activate
easy_install pip
pip install -r REQUIREMENTS.txt
```          

Install some manual dependencies needed for django-snippets (make sure your
virtual env is active):

```
git clone https://github.com/coleifer/django-amazon-resources.git
cd django-amazon-resources/
python setup.py install
cd ..
```

Now install qgis snippets (a fork of django snippets)

```
git clone git@github.com:qgis/qgis-snippets.git
cd qgis-snippets
python setup.py install
cd ..
```


```
sudo apt-get install postgresql-8.4-postgis
```

Copy the settings template:

```
cd qgis
cp settings_local.py.templ settings_local.py
```

Then run the createdb script:

```
./createdb.sh
```

''Note:'' If you already have postgis installed in your template1 db, 
just do the following command rather than running the createdb script:

```
createdb qgis-trunk
```

''Note:'' Remember to source the activate script to enabled the python 
virtual environment:

```
source python/bin/activate
```

Modify settings_local.py to include the correct username and pwd for the
db connection.

```
cd qgis
python manage.py syncdb
```

Then run the project using the embedded test server:

```
python manage.py runserver
```

Then point your browser at:

```
http://localhost:8000
```

= Deploying a live site using wsgi =

```
cd /etc/apache/sites-available
sudo cp <path to qgis-django>/apache/apache.virtenv.conf.example qgis-django.conf
```

Now modify qgis-django.conf to your needs (making sure paths and web url are correct) then:

```
sudo a2ensite qgis-django.conf
sudo /etc/init.d/apache2 reload
```

= Updating the search indexes =

The haystack search indexes should be created after initial install:

```
python manage.py create_index
```

There after they should be updated regularly e.g. using a 5 min cron job:

```
python manage.py update_index
```

= Cache setup =

We will use database based caching here (see [http://docs.djangoproject.com/en/dev/topics/cache/ | django caching]).

Make sure your virtual env is set up and then create a cache table:

```
python manage.py createcachetable cache_table
```

**NOTE:** The cache backend is required for the planet / feedjack to work properly

= Feedjack Update =

The Blog Planet requires feedjack_update.py to run at regular intervals to keep
the site fresh. The update_planet.sh shell script sets up the environment and
runs feedjack_update.py. 

The script requires you to set SITE_DIR to point at the Django site directory prior to first use.

The script must be run by a user that has permissions to the site directory.

To install as a cron, use the following (adjust the paths for your site):

```
  */2 * * * * /home/web/qgis-django/update_planet.sh 1>>/tmp/planet_update.log 2>>/tmp/planet_update.err
```
